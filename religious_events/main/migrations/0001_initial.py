# Generated by Django 5.0.6 on 2024-07-08 09:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReligiousEvent',
            fields=[
                ('event_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('date', models.CharField(max_length=10)),
                ('religion', models.CharField(choices=[('원불교', '원불교'), ('천주교', '천주교'), ('기독교', '기독교'), ('불교', '불교')], max_length=20)),
                ('status', models.CharField(choices=[('예약', '예약'), ('종료', '종료'), ('취소', '취소')], default='예약', max_length=10)),
                ('reserved_count', models.IntegerField(blank=True, null=True)),
                ('attended_count', models.IntegerField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=20)),
                ('grade', models.CharField(max_length=2)),
                ('company', models.CharField(max_length=1)),
                ('name', models.CharField(max_length=10)),
                ('contact', models.CharField(blank=True, max_length=12)),
                ('note', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='MyAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact', models.CharField(blank=True, max_length=12)),
                ('religion', models.CharField(choices=[('원불교', '원불교'), ('천주교', '천주교'), ('기독교', '기독교'), ('불교', '불교'), ('전체', '전체')], max_length=20)),
                ('admin_type', models.CharField(choices=[('군종', '군종'), ('훈육요원', '훈육요원'), ('대표생도', '대표생도'), ('지휘근무생도', '지휘근무생도')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EventAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation', models.CharField(choices=[('예약', '예약'), ('취소', '취소')], default='예약', max_length=10)),
                ('attendance', models.CharField(choices=[('불참', '불참'), ('참석', '참석')], default='불참', max_length=10)),
                ('note', models.CharField(blank=True, max_length=200)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.religiousevent')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.student')),
            ],
            options={
                'unique_together': {('student', 'event')},
            },
        ),
    ]
